# Generated by Django 4.0.4 on 2022-05-08 12:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Logs_for_add_user',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.CharField(max_length=100)),
                ('log', models.TextField()),
                ('your_group', models.TextField()),
                ('member_name', models.TextField()),
                ('account', models.CharField(max_length=100)),
                ('date', models.TextField(default='')),
                ('time', models.TextField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='Logs_for_user_Messages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.CharField(max_length=100)),
                ('log', models.TextField()),
                ('message', models.TextField()),
                ('image', models.TextField(default='')),
                ('member_name', models.TextField()),
                ('account', models.CharField(max_length=100)),
                ('type', models.CharField(default='text', max_length=100)),
                ('date', models.TextField(default='')),
                ('time', models.TextField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule_Add_Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.CharField(max_length=100)),
                ('your_group', models.TextField()),
                ('member_names', models.TextField()),
                ('delay', models.CharField(max_length=100)),
                ('date', models.CharField(max_length=100)),
                ('time', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=100)),
                ('limit_per_account', models.CharField(default=40, max_length=100)),
                ('accounts', models.TextField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule_Messages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.CharField(max_length=100)),
                ('message', models.TextField()),
                ('image', models.TextField(default='')),
                ('account_id', models.CharField(max_length=100)),
                ('group', models.CharField(max_length=100)),
                ('delay', models.CharField(max_length=100)),
                ('date', models.CharField(max_length=100)),
                ('time', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=100)),
                ('type', models.CharField(default='text', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Schedule_User_Messages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.CharField(max_length=100)),
                ('message', models.TextField()),
                ('image', models.TextField(default='')),
                ('member_names', models.TextField()),
                ('delay', models.CharField(max_length=100)),
                ('date', models.CharField(max_length=100)),
                ('time', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=100)),
                ('type', models.CharField(default='text', max_length=100)),
                ('limit_per_account', models.CharField(default=40, max_length=100)),
                ('accounts', models.TextField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='Telegram_Accounts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=500)),
                ('hash_key', models.CharField(max_length=500)),
                ('hash_id', models.CharField(max_length=500)),
                ('proxy', models.CharField(max_length=200)),
                ('sleep_time', models.CharField(default=2, max_length=120)),
                ('sleep_time_first', models.CharField(default=2, max_length=120)),
                ('user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Telegram_Answers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.CharField(max_length=100)),
                ('account_id', models.CharField(max_length=100)),
                ('answers', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Telegram_Groups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.CharField(max_length=100)),
                ('account_id', models.CharField(max_length=100)),
                ('group_name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Telegram_Questions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.CharField(max_length=100)),
                ('account_id', models.CharField(max_length=100)),
                ('questions', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Telegram_Scrapped_Groups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.CharField(max_length=100)),
                ('account_id', models.CharField(max_length=100)),
                ('group_id', models.CharField(max_length=100)),
                ('group_title', models.TextField()),
                ('group_username', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Telegram_Scrapped_Members',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.CharField(max_length=100)),
                ('account_id', models.CharField(max_length=100)),
                ('group_id', models.CharField(max_length=100)),
                ('member_id', models.CharField(max_length=100)),
                ('member_name', models.TextField()),
                ('status', models.CharField(default='not scheduled', max_length=100)),
                ('added_in', models.TextField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='TelegramSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auth_key', models.CharField(max_length=5000, null=True)),
                ('telegramAccount', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='telegramBot.telegram_accounts')),
                ('user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
